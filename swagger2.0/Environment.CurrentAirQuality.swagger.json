{
  "swagger": "2.0",
  "info": {
    "title": "CurrentAirQualityInterfaceMapping",
    "version": "OCFv1.0.0-20170317",
    "license": {
      "name": "copyright 2016-2017 Open Connectivity Foundation, Inc. All rights reserved.",
      "x-description": "Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n        1.  Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n        2.  Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n        THIS SOFTWARE IS PROVIDED BY THE Open Connectivity Foundation, INC. \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE OR WARRANTIES OF NON-INFRINGEMENT, ARE DISCLAIMED.\n        IN NO EVENT SHALL THE Open Connectivity Foundation, INC. OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n        HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
    }
  },
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/CurrentAirQualityResURI" : {
      "get": {
        "description": "This API defines the mapping between the AllJoyn AirQuality interface and the OCF AirQuality Resource.\nIf more than one instance of the AirQuality interface is exposed then each instance maps to an instance of the OCF AirQuality Resource.\nThe mapping defined in the schema describes the population of the OCF AirQuality Resource.\nEven if there is only a single instance of an OCF AirQuality Resource this shall be included in an instance of an OCF AirQualityCollection.\nThe number of links in the collection equates to the number of instances of the AllJoyn CurrentAirQuality interface that are exposed.\nWhen mapping from OCF the valueType of the Resource shall be introspected, this API is invoked only if this is set to 'Measured'\n",
        "parameters": [
          {"$ref": "#/parameters/interface-sensor"}
        ],
        "responses": {
            "200": {
              "description" : "",
              "x-example":
                {
                  "rt":     ["oic.r.airqualitycollection"]
                }
                ,
              "schema": { "$ref": "#/definitions/RetrieveSchema" }
            }
        }
      }
    }
  },
  "parameters": {
    "interface-sensor" : {
      "in" : "query",
      "name" : "if",
      "type" : "string",
      "enum" : ["oic.if.s", "oic.if.baseline"]
    }
  },
  "definitions": {
    "RetrieveSchema" : 
            {
        "properties": {
          "contaminanttype": {
            "description": "The contaminant type",
            "type": "integer",
            "x-ocf-conversion": {
              "x-from-ocf": [
                "contaminanttype = indexof contaminanttypearray[ocf.contaminanttype]"
              ],
              "x-ocf-alias": "oic.r.airquality",
              "x-to-ocf": [
                "valuetype = Measured",
                "contaminanttypearray = [CH2O,CO2,CO,PM2_5,PM10,VOC]",
                "ocf.contaminanttype = contaminanttypearray[contaminanttype]"
              ]
            }
          },
          "currentvalue": {
            "type": "number",
            "x-ocf-conversion": {
              "x-from-ocf": [
                "currentvalue = contaminantvalue"
              ],
              "x-ocf-alias": "oic.r.airquality",
              "x-to-ocf": [
                "contaminantvalue = currentvalue"
              ]
            }
          },
          "maxvalue": {
            "type": "number",
            "x-ocf-conversion": {
              "x-from-ocf": [
                "maxvalue = range[1]"
              ],
              "x-ocf-alias": "oic.r.airquality",
              "x-to-ocf": [
                "range[1] = maxvalue"
              ]
            }
          },
          "minvalue": {
            "type": "number",
            "x-ocf-conversion": {
              "x-from-ocf": [
                "minvalue = range[0]"
              ],
              "x-ocf-alias": "oic.r.airquality",
              "x-to-ocf": [
                "range[0] = minvalue"
              ]
            }
          },
          "precision": {
            "type": "number",
            "x-ocf-conversion": {
              "x-from-ocf": [
                "precision = ocf.precision"
              ],
              "x-ocf-alias": "oic.r.airquality",
              "x-to-ocf": [
                "ocf.precision = precision"
              ]
            }
          },
          "updatemintime": {
            "type": "integer",
            "x-ocf-conversion": {
              "x-from-ocf": [
                "updatemintime = ocf.minnotifyperiod"
              ],
              "x-ocf-alias": "oic.r.value.conditional",
              "x-to-ocf": [
                "ocf.minnotifyperiod = updatemintime"
              ]
            }
          }
        },
        "required": [
          "contaminanttype",
          "currentvalue",
          "minvalue",
          "maxvalue",
          "precision",
          "updatemintime"
        ],
        "type": "object"
      }

  }
}
