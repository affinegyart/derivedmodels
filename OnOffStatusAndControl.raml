#%RAML 0.8
title: OnOffInterfaceMapping
version: OCFv1.1.0-20160701
documentation:
  - title: Â© 2016 Open Connectivity Foundation, Inc. All rights reserved.
    content: |
        Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
        1.  Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
        2.  Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

        THIS SOFTWARE IS PROVIDED BY THE Open Connectivity Foundation, INC. "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE OR WARRANTIES OF NON-INFRINGEMENT, ARE DISCLAIMED. IN NO EVENT SHALL THE Open Connectivity Foundation, INC. OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
schemas:
  - RetrieveSchema: !include asa.operation.onoffstatus.json
  - UpdateSchema: !include asa.operation.onoffcontrol.json

traits:
  - interface-sensor:
      queryParameters:
        if:
          enum: ["oic.if.s","oic.if.baseline"]
  - interface-actuator:
      queryParameters:
        if:
          enum: ["oic.if.a","oic.if.baseline"]

/OnOffResURI:
  description: |
    This API defines the mapping between an instance of an OCF Binary Switch Resource and the
    equivalent Interface set in the AllSeen Alliance.  A discovered instance of a Binary Switch is always
    mapped to an Operation.OnOffStatus interface.
    A RETRIEVE on a Binary Switch maps to an action on an instance of an Operation.OnOffStatus Interface.
    An UPDATE on a Binary Switch maps to a method invocation on either Operation.OnControl or OffControl.
      value = true maps to Operation.OnControl
      value = false maps to Operation.OffControl
  displayName: On Off Mapping

  get:
    is: [interface-sensor,interface-actuator]
    responses:
      200:
        body:
          application/json:
            schema: RetrieveSchema
            example: |
              {
                "rt":     ["oic.r.switch.binary"]
              }
  post:
    is: [interface-actuator]
    body:
      application/json:
        schema: UpdateSchema

    responses:
      200:
        body:
          application/json:
            schema: UpdateSchema
